<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="27">
  <CheatEntries>
    <CheatEntry>
      <ID>16</ID>
      <Description>"[ Activate First ]"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>A00000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(_AobPlayerID,JustCause4.exe,0F B7 9E AA 03 00 00)
alloc(newmem,$100,JustCause4.exe)

label(code)
label(return)
label(PlayerID)

newmem:
mov [PlayerID],rsi

code:
  movzx ebx,word ptr [rsi+000003AA]
  jmp return

PlayerID:
dd 0

_AobPlayerID:
  jmp newmem
  nop
  nop
return:
registersymbol(_AobPlayerID)
registersymbol(PlayerID)

[DISABLE]

_AobPlayerID:
  db 0F B7 9E AA 03 00 00

unregistersymbol(_AobPlayerID)
unregistersymbol(PlayerID)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "JustCause4.exe"+A0B73B0

"JustCause4.exe"+A0B7382: E8 A9 33 1C F6           -  call JustCause4.exe+27A730
"JustCause4.exe"+A0B7387: 48 8D 57 28              -  lea rdx,[rdi+28]
"JustCause4.exe"+A0B738B: 4C 89 7C 24 20           -  mov [rsp+20],r15
"JustCause4.exe"+A0B7390: 48 8D 4F 10              -  lea rcx,[rdi+10]
"JustCause4.exe"+A0B7394: 45 31 C9                 -  xor r9d,r9d
"JustCause4.exe"+A0B7397: 4C 8D 05 02 CD 7A F8     -  lea r8,[JustCause4.exe+28640A0]
"JustCause4.exe"+A0B739E: E8 FD 98 1B F6           -  call JustCause4.exe+270CA0
"JustCause4.exe"+A0B73A3: C6 87 88 00 00 00 01     -  mov byte ptr [rdi+00000088],01
"JustCause4.exe"+A0B73AA: 48 8B 06                 -  mov rax,[rsi]
"JustCause4.exe"+A0B73AD: 48 89 F1                 -  mov rcx,rsi
// ---------- INJECTING HERE ----------
"JustCause4.exe"+A0B73B0: 0F B7 9E AA 03 00 00     -  movzx ebx,word ptr [rsi+000003AA]
// ---------- DONE INJECTING  ----------
"JustCause4.exe"+A0B73B7: FF 90 10 01 00 00        -  call qword ptr [rax+00000110]
"JustCause4.exe"+A0B73BD: 66 39 D8                 -  cmp ax,bx
"JustCause4.exe"+A0B73C0: 7D 6E                    -  jnl JustCause4.exe+A0B7430
"JustCause4.exe"+A0B73C2: 48 8B 06                 -  mov rax,[rsi]
"JustCause4.exe"+A0B73C5: 48 89 F1                 -  mov rcx,rsi
"JustCause4.exe"+A0B73C8: FF 90 18 01 00 00        -  call qword ptr [rax+00000118]
"JustCause4.exe"+A0B73CE: 84 C0                    -  test al,al
"JustCause4.exe"+A0B73D0: 75 5E                    -  jne JustCause4.exe+A0B7430
"JustCause4.exe"+A0B73D2: F3 0F 10 47 3C           -  movss xmm0,[rdi+3C]
"JustCause4.exe"+A0B73D7: 0F 2F 47 40              -  comiss xmm0,[rdi+40]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Inf.Health"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(_AobHealth,JustCause4.exe,0F B7 81 AC 03 00 00)
alloc(newmem,$100,JustCause4.exe)

label(code)
label(return)

newmem:

code:
cmp [PlayerID],rcx
jne @f
fild [rcx+000003AA]
fistp [rcx+000003AC]
@@:
  movzx eax,word ptr [rcx+000003AC]
  jmp return

_AobHealth:
  jmp newmem
  nop
  nop
return:
registersymbol(_AobHealth)

[DISABLE]

_AobHealth:
  db 0F B7 81 AC 03 00 00

unregistersymbol(_AobHealth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "JustCause4.exe"+8950FB0

"JustCause4.exe"+8950F8C: 48 8D 05 7D 0C 1D F9     -  lea rax,[JustCause4.exe+1B21C10]
"JustCause4.exe"+8950F93: 48 8D 3D 9F 79 89 03     -  lea rdi,[JustCause4.exe+C1E8939]
"JustCause4.exe"+8950F9A: 48 87 3C 24              -  xchg [rsp],rdi
"JustCause4.exe"+8950F9E: C3                       -  ret 
"JustCause4.exe"+8950F9F: 67 9D                    -  popfq 
"JustCause4.exe"+8950FA1: 41 57                    -  push r15
"JustCause4.exe"+8950FA3: 4C 8D 3D C6 F3 0A FF     -  lea r15,[JustCause4.exe+7A00370]
"JustCause4.exe"+8950FAA: 4C 87 3C 24              -  xchg [rsp],r15
"JustCause4.exe"+8950FAE: C3                       -  ret 
"JustCause4.exe"+8950FAF: 90                       -  nop 
// ---------- INJECTING HERE ----------
"JustCause4.exe"+8950FB0: 0F B7 81 AC 03 00 00     -  movzx eax,word ptr [rcx+000003AC]
// ---------- DONE INJECTING  ----------
"JustCause4.exe"+8950FB7: C3                       -  ret 
"JustCause4.exe"+8950FB8: 4C 8D 34 24              -  lea r14,[rsp]
"JustCause4.exe"+8950FBC: 49 8B 3E                 -  mov rdi,[r14]
"JustCause4.exe"+8950FBF: 48 8D 64 24 08           -  lea rsp,[rsp+08]
"JustCause4.exe"+8950FC4: E9 35 09 42 00           -  jmp JustCause4.exe+8D718FE
"JustCause4.exe"+8950FC9: 48 8B 3C 24              -  mov rdi,[rsp]
"JustCause4.exe"+8950FCD: 48 8D 64 24 08           -  lea rsp,[rsp+08]
"JustCause4.exe"+8950FD2: 9C                       -  pushfq 
"JustCause4.exe"+8950FD3: 50                       -  push rax
"JustCause4.exe"+8950FD4: 48 F7 D0                 -  not rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Inf.Ammo \ Granades"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(_AobAmmo,JustCause4.exe,8B 84 81 28 02 00 00)
alloc(newmem,$100,JustCause4.exe)

label(code)
label(return)

newmem:

code:
  fild [rcx+rax*4+000002DC]
  fistp [rcx+rax*4+00000228]
  mov eax,[rcx+rax*4+00000228]
  jmp return

_AobAmmo:
  jmp newmem
  nop
  nop
return:
registersymbol(_AobAmmo)

[DISABLE]

_AobAmmo:
  db 8B 84 81 28 02 00 00

unregistersymbol(_AobAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "JustCause4.exe"+90A9B33

"JustCause4.exe"+90A9B05: 49 F7 D0              -  not r8
"JustCause4.exe"+90A9B08: 48 81 C2 6C A0 0A BB  -  add rdx,BB0AA06C
"JustCause4.exe"+90A9B0F: 4C 21 82 94 5F F5 44  -  and [rdx+44F55F94],r8
"JustCause4.exe"+90A9B16: 41 0F A4 F7 1B        -  shld r15d,esi,1B
"JustCause4.exe"+90A9B1B: 41 58                 -  pop r8
"JustCause4.exe"+90A9B1D: 41 81 D7 A4 BB 3D 41  -  adc r15d,413DBBA4
"JustCause4.exe"+90A9B24: 0F 8B 96 00 86 01     -  jnp JustCause4.exe+A909BC0
"JustCause4.exe"+90A9B2A: E9 2A BE B5 06        -  jmp JustCause4.exe+FC05959
"JustCause4.exe"+90A9B2F: 3B 48 63              -  cmp ecx,[rax+63]
"JustCause4.exe"+90A9B32: C2 8B                 - db C2 8B  // SHORTENED TO HIT INJECTION FROM:  ret 848B
// ---------- INJECTING HERE ----------
"JustCause4.exe"+90A9B34: 84 81 28 02 00 00     -  test [rcx+00000228],al
// ---------- DONE INJECTING  ----------
"JustCause4.exe"+90A9B3A: C3                    -  ret 
"JustCause4.exe"+90A9B3B: 0F 89 48 60 80 FE     -  jns JustCause4.exe+78AFB89
"JustCause4.exe"+90A9B41: 8B 1C 24              -  mov ebx,[rsp]
"JustCause4.exe"+90A9B44: BB FF FF FF FF        -  mov ebx,FFFFFFFF
"JustCause4.exe"+90A9B49: 87 1C 24              -  xchg [rsp],ebx
"JustCause4.exe"+90A9B4C: 44 31 04 24           -  xor [rsp],r8d
"JustCause4.exe"+90A9B50: 45 31 C0              -  xor r8d,r8d
"JustCause4.exe"+90A9B53: 48 8D 2C 24           -  lea rbp,[rsp]
"JustCause4.exe"+90A9B57: 48 F7 DD              -  neg rbp
"JustCause4.exe"+90A9B5A: 48 81 ED 50 26 1B E8  -  sub rbp,E81B2650
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"No Reload"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(_AobNoReload,JustCause4.exe,8B 83 3C 05 00 00 66 0F 6E C8)
alloc(newmem,$100,JustCause4.exe)

label(code)
label(return)

newmem:

code:
  mov [rbx+0000053C],63
  mov eax,[rbx+0000053C]
  jmp return

_AobNoReload:
  jmp newmem
  nop
return:
registersymbol(_AobNoReload)

[DISABLE]

_AobNoReload:
  db 8B 83 3C 05 00 00

unregistersymbol(_AobNoReload)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "JustCause4.exe"+91FC1B1

"JustCause4.exe"+91FC18D: 48 85 C0                       -  test rax,rax
"JustCause4.exe"+91FC190: 74 1F                          -  je JustCause4.exe+91FC1B1
"JustCause4.exe"+91FC192: 80 B8 D1 03 00 00 00           -  cmp byte ptr [rax+000003D1],00
"JustCause4.exe"+91FC199: 74 16                          -  je JustCause4.exe+91FC1B1
"JustCause4.exe"+91FC19B: 48 8B 80 38 06 00 00           -  mov rax,[rax+00000638]
"JustCause4.exe"+91FC1A2: 48 8B 08                       -  mov rcx,[rax]
"JustCause4.exe"+91FC1A5: 48 85 C9                       -  test rcx,rcx
"JustCause4.exe"+91FC1A8: 74 07                          -  je JustCause4.exe+91FC1B1
"JustCause4.exe"+91FC1AA: E8 61 0D 4B F7                 -  call JustCause4.exe+6ACF10
"JustCause4.exe"+91FC1AF: EB 06                          -  jmp JustCause4.exe+91FC1B7
// ---------- INJECTING HERE ----------
"JustCause4.exe"+91FC1B1: 8B 83 3C 05 00 00              -  mov eax,[rbx+0000053C]
// ---------- DONE INJECTING  ----------
"JustCause4.exe"+91FC1B7: 66 0F 6E C8                    -  movd xmm1,eax
"JustCause4.exe"+91FC1BB: 66 0F 6E C5                    -  movd xmm0,ebp
"JustCause4.exe"+91FC1BF: 0F 5B C9                       -  cvtdq2ps xmm1,xmm1
"JustCause4.exe"+91FC1C2: 0F 5B C0                       -  cvtdq2ps xmm0,xmm0
"JustCause4.exe"+91FC1C5: F3 0F 5E C8                    -  divss xmm1,xmm0
"JustCause4.exe"+91FC1C9: EB 0D                          -  jmp JustCause4.exe+91FC1D8
"JustCause4.exe"+91FC1CB: 0F 57 C9                       -  xorps xmm1,xmm1
"JustCause4.exe"+91FC1CE: EB 08                          -  jmp JustCause4.exe+91FC1D8
"JustCause4.exe"+91FC1D0: F3 0F 10 0D 14 24 8E F8        -  movss xmm1,[JustCause4.exe+1ADE5EC]
"JustCause4.exe"+91FC1D8: 48 8B 5C 24 30                 -  mov rbx,[rsp+30]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>143</ID>
          <Description>"Freeze Time"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(_AobTime,JustCause4.exe,F3 0F 11 83 B0 00 00 00 44)
registersymbol(_AobTime)

_AobTime:
  db 90 90 90 90 90 90 90 90

[DISABLE]

_AobTime:
  db F3 0F 11 83 B0 00 00 00


{
// ORIGINAL CODE - INJECTION POINT: "JustCause4.exe"+9848E45

"JustCause4.exe"+9848E22: 0F 94 D0                 -  sete al
"JustCause4.exe"+9848E25: 44 0F 29 44 24 50        -  movaps [rsp+50],xmm8
"JustCause4.exe"+9848E2B: 31 F6                    -  xor esi,esi
"JustCause4.exe"+9848E2D: 45 0F 57 C0              -  xorps xmm8,xmm8
"JustCause4.exe"+9848E31: 0F 28 C6                 -  movaps xmm0,xmm6
"JustCause4.exe"+9848E34: 45 84 E4                 -  test r12l,r12l
"JustCause4.exe"+9848E37: 74 1A                    -  je JustCause4.exe+9848E53
"JustCause4.exe"+9848E39: F3 0F 5C C7              -  subss xmm0,xmm7
"JustCause4.exe"+9848E3D: 44 0F B6 F8              -  movzx r15d,al
"JustCause4.exe"+9848E41: 41 0F 2F C0              -  comiss xmm0,xmm8
// ---------- INJECTING HERE ----------
"JustCause4.exe"+9848E45: F3 0F 11 83 B0 00 00 00  -  movss [rbx+000000B0],xmm0
// ---------- DONE INJECTING  ----------
"JustCause4.exe"+9848E4D: 44 0F 47 FE              -  cmova r15d,esi
"JustCause4.exe"+9848E51: EB 3B                    -  jmp JustCause4.exe+9848E8E
"JustCause4.exe"+9848E53: F3 0F 10 8B 98 00 00 00  -  movss xmm1,[rbx+00000098]
"JustCause4.exe"+9848E5B: F3 0F 58 C7              -  addss xmm0,xmm7
"JustCause4.exe"+9848E5F: 0F 2F C1                 -  comiss xmm0,xmm1
"JustCause4.exe"+9848E62: F3 0F 11 83 B0 00 00 00  -  movss [rbx+000000B0],xmm0
"JustCause4.exe"+9848E6A: 72 22                    -  jb JustCause4.exe+9848E8E
"JustCause4.exe"+9848E6C: 0F 2F F1                 -  comiss xmm6,xmm1
"JustCause4.exe"+9848E6F: 44 0F B6 F8              -  movzx r15d,al
"JustCause4.exe"+9848E73: F3 0F 11 8B B0 00 00 00  -  movss [rbx+000000B0],xmm1
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Easy Kills"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(_AobEasyKills,JustCause4.exe,0F BF 81 AA 03 00 00 48)
alloc(newmem,$1000,JustCause4.exe)

label(code)
label(return)

newmem:

code:
cmp [PlayerID],rcx
je @f
mov word ptr [rcx+000003AA],64
@@:
  movsx eax,word ptr [rcx+000003AA]
  jmp return

_AobEasyKills:
  jmp newmem
  nop
  nop
return:
registersymbol(_AobEasyKills)

[DISABLE]

_AobEasyKills:
  db 0F BF 81 AA 03 00 00

unregistersymbol(_AobEasyKills)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "JustCause4.exe"+904128A

"JustCause4.exe"+904125C: 4C 8D 3D 67 BB 68 05                 -  lea r15,[JustCause4.exe+E6CCDCA]
"JustCause4.exe"+9041263: 49 23 88 72 6C D5 84                 -  and rcx,[r8-7B2A938E]
"JustCause4.exe"+904126A: 48 01 D9                             -  add rcx,rbx
"JustCause4.exe"+904126D: 48 8D 1C 24                          -  lea rbx,[rsp]
"JustCause4.exe"+9041271: 48 C7 C5 00 01 00 00                 -  mov rbp,00000100
"JustCause4.exe"+9041278: 41 FF E7                             -  jmp r15
"JustCause4.exe"+904127B: 68 0F 1F 40 00                       -  push 00401F0F
"JustCause4.exe"+9041280: 48 89 5C 24 08                       -  mov [rsp+08],rbx
"JustCause4.exe"+9041285: 57                                   -  push rdi
"JustCause4.exe"+9041286: 48 83 EC 50                          -  sub rsp,50
// ---------- INJECTING HERE ----------
"JustCause4.exe"+904128A: 0F BF 81 AA 03 00 00                 -  movsx eax,word ptr [rcx+000003AA]
// ---------- DONE INJECTING  ----------
"JustCause4.exe"+9041291: 48 89 CB                             -  mov rbx,rcx
"JustCause4.exe"+9041294: F3 0F 10 0D 50 D3 A9 F8              -  movss xmm1,[JustCause4.exe+1ADE5EC]
"JustCause4.exe"+904129C: 48 89 D7                             -  mov rdi,rdx
"JustCause4.exe"+904129F: 4C 8B 8B 98 02 00 00                 -  mov r9,[rbx+00000298]
"JustCause4.exe"+90412A6: 66 0F 6E C0                          -  movd xmm0,eax
"JustCause4.exe"+90412AA: 0F BF 81 AE 03 00 00                 -  movsx eax,word ptr [rcx+000003AE]
"JustCause4.exe"+90412B1: 0F 5B C0                             -  cvtdq2ps xmm0,xmm0
"JustCause4.exe"+90412B4: 45 8B 41 78                          -  mov r8d,[r9+78]
"JustCause4.exe"+90412B8: 66 0F 6E D8                          -  movd xmm3,eax
"JustCause4.exe"+90412BC: 0F BF 81 AC 03 00 00                 -  movsx eax,word ptr [rcx+000003AC]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>144</ID>
          <Description>"Support author by sending a donation"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>145</ID>
              <Description>"https://www.paypal.me/ArmYof0n3"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
